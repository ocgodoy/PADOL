[{"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\index.js":"1","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\App.js":"2","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\MainRouter.js":"3","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\core\\Menu.js":"4","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\core\\Home.js":"5","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\Signup.js":"6","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\Signin.js":"7","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\Profile.js":"8","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\Users.js":"9","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\FindPeople.js":"10","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\EditProfile.js":"11","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\auth\\PrivateRoute.js":"12","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\SinglePost.js":"13","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\NewPost.js":"14","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\EditPost.js":"15","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\ExpiredPost.js":"16","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\auth\\index.js":"17","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\Posts.js":"18","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\FollowProfileButton.js":"19","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\apiUser.js":"20","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\ProfileTabs.js":"21","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\DeleteProfile.js":"22","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\apiPost.js":"23","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\Comment.js":"24","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\DeletePost.js":"25","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\DeleteComment.js":"26"},{"size":147,"mtime":1607527757866,"results":"27","hashOfConfig":"28"},{"size":223,"mtime":1607527757860,"results":"29","hashOfConfig":"28"},{"size":1496,"mtime":1607527757860,"results":"30","hashOfConfig":"28"},{"size":2676,"mtime":1607527757864,"results":"31","hashOfConfig":"28"},{"size":309,"mtime":1607527757864,"results":"32","hashOfConfig":"28"},{"size":3388,"mtime":1607527757886,"results":"33","hashOfConfig":"28"},{"size":2278,"mtime":1607527757884,"results":"34","hashOfConfig":"28"},{"size":3826,"mtime":1607527757882,"results":"35","hashOfConfig":"28"},{"size":1572,"mtime":1607527757888,"results":"36","hashOfConfig":"28"},{"size":2714,"mtime":1607527757881,"results":"37","hashOfConfig":"28"},{"size":4802,"mtime":1607527757880,"results":"38","hashOfConfig":"28"},{"size":470,"mtime":1607527757860,"results":"39","hashOfConfig":"28"},{"size":6210,"mtime":1609378708659,"results":"40","hashOfConfig":"28"},{"size":4736,"mtime":1609379965868,"results":"41","hashOfConfig":"28"},{"size":3961,"mtime":1609379582046,"results":"42","hashOfConfig":"28"},{"size":1456,"mtime":1607527757866,"results":"43","hashOfConfig":"28"},{"size":1316,"mtime":1607527757860,"results":"44","hashOfConfig":"28"},{"size":3144,"mtime":1607527757876,"results":"45","hashOfConfig":"28"},{"size":799,"mtime":1607527757882,"results":"46","hashOfConfig":"28"},{"size":2536,"mtime":1607527757890,"results":"47","hashOfConfig":"28"},{"size":3149,"mtime":1607527757883,"results":"48","hashOfConfig":"28"},{"size":1058,"mtime":1607527757879,"results":"49","hashOfConfig":"28"},{"size":4409,"mtime":1609379240231,"results":"50","hashOfConfig":"28"},{"size":4197,"mtime":1607527757866,"results":"51","hashOfConfig":"28"},{"size":959,"mtime":1609378836647,"results":"52","hashOfConfig":"28"},{"size":1060,"mtime":1607527757866,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"gf2ea9",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\index.js",[],["120","121"],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\App.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\MainRouter.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\core\\Menu.js",["122"],"import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { signout, isAuthenticate, isActive } from '../auth/index'\r\n\r\nconst Menu = ({ history }) => (\r\n  <div>\r\n    <ul className='nav nav-tabs bg-primary'>\r\n      <li className='nav-item'>\r\n        <Link className='nav-link' style={isActive(history, '/')} to='/'>\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li className='nav-item'>\r\n        <Link\r\n          className='nav-link'\r\n          style={isActive(history, '/users')}\r\n          to='/users'\r\n        >\r\n          Users\r\n        </Link>\r\n      </li>\r\n      {!isAuthenticate() ? (\r\n        <>\r\n          <li className='nav-item'>\r\n            <Link\r\n              className='nav-link'\r\n              style={isActive(history, '/signup')}\r\n              to='/signup'\r\n            >\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link\r\n              className='nav-link'\r\n              style={isActive(history, '/signin')}\r\n              to='/signin'\r\n            >\r\n              Sign In\r\n            </Link>\r\n          </li>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {isAuthenticate() ? (\r\n        <>\r\n          <li className='nav-item'>\r\n            <Link\r\n              className='nav-link'\r\n              style={isActive(history, `/user/${isAuthenticate().user._id}`)}\r\n              to={`/user/${isAuthenticate().user._id}`}\r\n            >\r\n              {isAuthenticate().user.pseudo}'s profile\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link\r\n              className='nav-link'\r\n              style={isActive(\r\n                history,\r\n                `/user/findpeople/${isAuthenticate().user._id}`\r\n              )}\r\n              to={`/user/findpeople/${isAuthenticate().user._id}`}\r\n            >\r\n              Find People\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link\r\n              className='nav-link'\r\n              style={isActive(history, '/post/new')}\r\n              to='/post/new'\r\n            >\r\n              Create Post\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <a\r\n              className='nav-link'\r\n              style={isActive(history, '/signout', {\r\n                cursor: 'pointer',\r\n                color: '#fff'\r\n              })}\r\n              onClick={() => signout(() => history.push('/'))}\r\n            >\r\n              Sign Out\r\n            </a>\r\n          </li>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nexport default withRouter(Menu)\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\core\\Home.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\Signup.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\Signin.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\Profile.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\Users.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\FindPeople.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\EditProfile.js",["123","124","125","126","127"],"import React, { Component } from 'react';\r\nimport { getUser, update, updateLocalStorage } from './apiUser';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DefaultAvatar from '../images/avatar.png';\r\n\r\nclass EditProfile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: '',\r\n      email: '',\r\n      name: '',\r\n      password: '',\r\n      redirectToProfile: false,\r\n      error: '',\r\n      loading: false,\r\n      fileSize: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.userData = new FormData();\r\n    const userId = this.props.match.params.userId;\r\n    const token = isAuthenticate().token;\r\n    getUser(userId, token).then(data => {\r\n      if (!data || data.err) console.log(data.err);\r\n      else {\r\n        this.setState({ id: data._id, email: data.email, name: data.name });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChange = name => e => {\r\n    let value = name === 'photo' ? e.target.files[0] : e.target.value;\r\n    let fileSize = name === 'photo' ? e.target.files[0].size : 0;\r\n    this.userData.set(name, value);\r\n    this.setState({ [name]: value, error: '', fileSize });\r\n  };\r\n\r\n  clickSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.isValid()) {\r\n      this.setState({ loading: true });\r\n      const { id, name, email, password } = this.state;\r\n      // const user = { name, email, password: password || undefined }\r\n      const token = isAuthenticate().token;\r\n      update(id, token, this.userData).then(res => {\r\n        if (res.err) console.log(res.err);\r\n        else {\r\n          updateLocalStorage(res, () => {\r\n            this.setState({\r\n              redirectToProfile: true\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  isValid = () => {\r\n    const { name, email, password, fileSize } = this.state;\r\n    const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (fileSize > 300000) {\r\n      this.setState({ error: 'File size should be less than 300kb ' });\r\n      return false;\r\n    } else if (name.length === 0) {\r\n      this.setState({ error: 'Name is required' });\r\n      return false;\r\n    } else if (!reg.test(email.toLowerCase())) {\r\n      this.setState({ error: 'A valid Email is required' });\r\n      return false;\r\n    } else if (password.length > 0 && password.length < 6) {\r\n      this.setState({ error: 'Password must have at least 6 characters' });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  signUpForm = (name, email, password) => (\r\n    <form>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Profile Photo</label>\r\n        <input\r\n          onChange={this.handleChange('photo')}\r\n          type='file'\r\n          accept='images/*'\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <input\r\n          onChange={this.handleChange('name')}\r\n          value={name}\r\n          type='text'\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Email</label>\r\n        <input\r\n          onChange={this.handleChange('email')}\r\n          value={email}\r\n          type='email'\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Password</label>\r\n        <input\r\n          onChange={this.handleChange('password')}\r\n          value={password}\r\n          type='password'\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <button onClick={this.clickSubmit} className='btn btn-raised btn-primary'>\r\n        Update\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      email,\r\n      password,\r\n      id,\r\n      redirectToProfile,\r\n      error,\r\n      loading\r\n    } = this.state;\r\n    if (redirectToProfile) return <Redirect to={`/user/${id}`} />;\r\n    return (\r\n      <div className='container'>\r\n        <h2 className='mt-5 mb-5'>Edit Profile</h2>\r\n        <div\r\n          className='alert alert-danger'\r\n          style={{ display: error ? '' : 'none' }}\r\n        >\r\n          {error}\r\n        </div>\r\n        {loading ? (\r\n          <div className='jumbotron text-center'>\r\n            <h2>Loading...</h2>\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n\r\n        <img\r\n          src={`${process.env.REACT_APP_API_URL}/user/photo/${id}`}\r\n          onError={i => (i.target.src = `${DefaultAvatar}`)}\r\n          style={{ width: '30%', height: '15vw', objectFit: 'cover' }}\r\n          alt={name}\r\n        />\r\n\r\n        {this.signUpForm(name, email, password)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\auth\\PrivateRoute.js",["128"],"import React, { Component } from 'react'\r\nimport { isAuthenticate } from '.'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ componen: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticate() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{ pathname: '/signin', state: { from: props.location } }}\r\n        />\r\n      )}\r\n  />\r\n)\r\n\r\nexport default PrivateRoute\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\SinglePost.js",["129","130","131","132","133","134"],"import React, { Component, useImperativeHandle } from 'react';\r\nimport { isAuthenticate } from '../auth';\r\nimport DefaultAvatar from '../images/post.jpg';\r\nimport { getPost, likePost, getBase64Photo } from './apiPost';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport DeletePost from './DeletePost';\r\nimport Comment from './Comment';\r\n\r\nclass SinglePost extends Component {\r\n  state = {\r\n    post: {},\r\n    postId:{},\r\n    postedBy: {},\r\n    B64photo:{},\r\n    date: null,\r\n    redirectToSignin: false,\r\n    like: {},\r\n    likes: 0,\r\n    likers: [],\r\n    error: undefined,\r\n    comments: []\r\n  };\r\n\r\n\r\n  /**********************************RECUPERATION DONNEE DE LA BDD*********************************/ \r\n  componentDidMount() {\r\n    if (!isAuthenticate()) return this.setState({ redirectToSignin: true });\r\n    const token = isAuthenticate().token;\r\n    const postId = this.props.match.params.postId;\r\n\r\n\r\n    getPost(postId, token).then(data => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        this.setState({error: data.error})\r\n      }\r\n      else{\r\n          this.setState({\r\n            post: data.content,\r\n            postedBy: data.postedBy,\r\n            postId: data._id,\r\n            date: data.date,\r\n            views: data.views,\r\n            likes: data.likes.numberOfLikes, //nb de like\r\n            liker: data.likes.likers, //donnée Id des likers\r\n            like : this.checkLike(data), default: false, //verifie que la personne du like a déja liké\r\n            comments: data.comments\r\n          });\r\n        }\r\n    });\r\n\r\n\r\n    getBase64Photo(postId, token).then(B64photo => {\r\n      if (B64photo.error) console.log(B64photo.error);\r\n      else{\r\n          this.setState({\r\n            B64photo : B64photo,\r\n          });\r\n        }\r\n    });\r\n  }\r\n  /**********************************FIN DE RECUPERATION DONNEE DE LA BDD*********************************/ \r\n  \r\n  /*\r\n  state.like = true signifie que le statue est liké\r\n  sate.like = false signifie que le statue n'est pas liké\r\n  */\r\n  \r\n\r\n\r\n  /***************************************FONCTIONS LIKE****************************************************/\r\n  checkLike = data => {\r\n    const userId = isAuthenticate().user._id;\r\n    if(data.likes.likers.includes(userId)){return true}\r\n  };\r\n\r\n  likeToggle = () => {\r\n    const token = isAuthenticate().token;\r\n    const postId = this.props.match.params.postId;\r\n    const userId = isAuthenticate().user._id\r\n    \r\n    if (this.state.like == true){\r\n      this.state.liker.pop();\r\n      this.setState({ like: !this.state.like, \r\n                      liker: this.state.liker,\r\n                      likes: this.state.liker.length\r\n                    });\r\n    }\r\n    else{\r\n      this.state.liker.push(userId);\r\n      this.setState({ like: !this.state.like, \r\n                      liker : this.state.liker,\r\n                      likes: this.state.liker.length\r\n                    });\r\n    }\r\n    likePost(postId, token, userId, this.state.like, this.state.liker.length, this.state.liker )\r\n  };\r\n/***************************************FONCTION COMMENT****************************************************/\r\n  updateComments = comments => {\r\n    this.setState({ comments: comments });\r\n  };\r\n\r\n\r\n/**********************************************AFFICHAGE****************************************************/\r\n  render() {\r\n    const {\r\n      post,\r\n      postedBy,\r\n      postId,\r\n      date,\r\n      B64photo,\r\n      loading,\r\n      likes,\r\n      like,\r\n      views,\r\n      redirectToSignin,\r\n      error,\r\n      comments\r\n    } = this.state;\r\n\r\n    \r\n    let photoUrl = 'data:image/jpg;base64,' + B64photo;\r\n\r\n    const posterId = postedBy ? postedBy._id : '';\r\n    const posterName = postedBy ? postedBy.pseudo : 'Unknown';\r\n    if (redirectToSignin) return <Redirect to='/signin' />;\r\n    if (error) return <Redirect to='/post/expired' />;\r\n    return (\r\n      <div className='container'>\r\n        {!post.title ? (\r\n          <div className='jumbotron text-center'>\r\n            <h2>Loading...</h2>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <h2 className='mt-5 mb-5 display-2'>{post.title}</h2>\r\n            <img\r\n              className='card-img-top'\r\n              src = {photoUrl}\r\n              onError={i => (i.target.src = `${DefaultAvatar}`)}\r\n              style={{ width: '30%', height: '15vw', objectFit: 'cover' }}\r\n            />\r\n            <br />\r\n            <br />\r\n\r\n            {!like ? (\r\n              <h3 onClick={this.likeToggle}>\r\n                <i className='fas fa-thumbs-up text-info'>\r\n                  {''} {likes} Like\r\n                </i>\r\n              </h3>\r\n            ) : (\r\n              <h3 onClick={this.likeToggle}>\r\n                <i className='fas fa-thumbs-down text-danger'>\r\n                  {''} {likes} Unlike\r\n                </i>\r\n              </h3>\r\n            )}\r\n            <p className='card-text'>{post.content}</p>\r\n            <br />\r\n            <p className='font-italic mark'>\r\n              Posted By <Link to={`/user/${posterId}`}>{posterName}</Link> on {new Date(date.uploadDate).toDateString()} at {(new Date(date.uploadDate)).getHours()}:{(new Date(date.uploadDate)).getMinutes()}\r\n            </p>\r\n            <p> Vues: {views.viewsNumber}/{views.viewsLimit}\r\n            </p>\r\n            <Link to={`/`} className='btn btn-primary btn-raised btn-sm mr-5'>\r\n              Back to posts\r\n            </Link>\r\n            {isAuthenticate().user && isAuthenticate().user._id == posterId ? (\r\n              <div className='d-inline-block'>\r\n                <Link\r\n                  className='btn btn-raised btn-success mr-5'\r\n                  to={`/post/edit/${post._id}`}\r\n                >\r\n                  Update Post\r\n                </Link>\r\n                <DeletePost postId={postId} userId={isAuthenticate().user._id}/>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </>\r\n        )}\r\n        <Comment\r\n          postId={postId}\r\n          comments={comments}\r\n          updateComments={this.updateComments}\r\n          comments={comments}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SinglePost;\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\NewPost.js",["135"],"import React, { Component } from 'react';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DefaultAvatar from '../images/post.jpg';\r\nimport { createPost } from './apiPost';\r\n\r\nclass NewPost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      caption: '',\r\n      viewsLimit:'',\r\n      timeLimit:'',\r\n      photo: '',\r\n      user: {},\r\n      redirectToProfile: false,\r\n      error: '',\r\n      loading: false,\r\n      fileSize: 0\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.postData = new FormData();\r\n    this.setState({ user: isAuthenticate().user });\r\n  }\r\n  \r\n  handleChange = name => e => {\r\n    let value = name === 'photo' ? e.target.files[0] : e.target.value;\r\n    let fileSize = name === 'photo' ? e.target.files[0].size : 0;\r\n    this.postData.set(name, value);\r\n    this.setState({ [name]: value, error: '', fileSize });\r\n    console.log(this.setState);\r\n  };\r\n  \r\n  clickSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.isValid()) {\r\n      this.setState({ loading: true });\r\n      const { user } = this.state;\r\n      const token = isAuthenticate().token;\r\n      this.postData.set(\"userId\", user._id)\r\n      \r\n      createPost(user._id, token, this.postData).then(res => {\r\n        if (res.error) console.log(res.error);\r\n        else {\r\n          this.setState({ redirectToProfile: true });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  \r\n  isValid = () => {\r\n    const { title, caption, fileSize, viewsLimit, timeLimit } = this.state;\r\n    if (fileSize > 300000) {\r\n      this.setState({ error: 'File size should be less than 300kb ' });\r\n      return false;\r\n    } else if (title.length === 0 || caption.length === 0 || viewsLimit.length === 0 || timeLimit.length === 0) {\r\n      this.setState({ error: 'All field is required' });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  newPostForm = (title, caption, viewsLimit, timeLimit) => (\r\n    <form>\r\n    <div className='form-group'>\r\n    <label className='text-muted'>Profile Photo</label>\r\n    <input\r\n    onChange={this.handleChange('photo')}\r\n    type='file'\r\n    accept='images/*'\r\n    className='form-control'\r\n    />\r\n    </div>\r\n    \r\n    <div className='form-group'>\r\n    <label className='text-muted'>Profile Photo</label>\r\n    </div>\r\n    \r\n    <div className='form-group'>\r\n    <label className='text-muted'>Title</label>\r\n    <input\r\n    onChange={this.handleChange('title')}\r\n    value={title}\r\n    type='text'\r\n    className='form-control'\r\n    />\r\n    </div>\r\n    <div className='form-group'>\r\n    <label className='text-muted'>Caption</label>\r\n    <input\r\n    onChange={this.handleChange('caption')}\r\n    value={caption}\r\n    type='text'\r\n    className='form-control'\r\n    />\r\n    </div>\r\n    <div className='form-group'>\r\n    <label className='text-muted'>\r\n    Limite de temps :\r\n    </label>\r\n    <div>\r\n    <select value={timeLimit} onChange={this.handleChange('timeLimit')}>\r\n    <option value=\"432000000\">Aucune</option>\r\n    <option value=\"60000\">1 minute</option>\r\n    <option value=\"900000\">15 minutes</option>\r\n    <option value=\"36000000\">1 heure</option>\r\n    <option value=\"18000000\">5 heures</option>\r\n    </select>\r\n    </div>\r\n    </div>\r\n    <div className='form-group'>\r\n    <label className='text-muted'>\r\n    Limite de vues :\r\n    </label>\r\n    <div>\r\n    <select value={viewsLimit} onChange={this.handleChange('viewsLimit')}>\r\n    <option value=\"1000\">Aucune</option>\r\n    <option value=\"5\">5 vues</option>\r\n    <option value=\"15\">15 vues</option>\r\n    <option value=\"50\">50 vues</option>\r\n    <option value=\"200\">200 vues</option>\r\n    </select>\r\n    </div>\r\n    </div>\r\n    \r\n    <button onClick={this.clickSubmit} className='btn btn-raised btn-primary'>\r\n    Create\r\n    </button>\r\n    </form>\r\n    );\r\n    \r\n    render() {\r\n      const {\r\n        title,\r\n        caption,\r\n        redirectToProfile,\r\n        user,\r\n        viewsLimit,\r\n        timeLimit,\r\n        error,\r\n        loading\r\n      } = this.state;\r\n      if (redirectToProfile) return <Redirect to={`/user/${user._id}`} />;\r\n      return (\r\n        <div className='container'>\r\n        <h2 className='mt-5 mb-5'>Create Post</h2>\r\n        <div\r\n        className='alert alert-danger'\r\n        style={{ display: error ? '' : 'none' }}\r\n        >\r\n        {error}\r\n        </div>\r\n        {loading ? (\r\n          <div className='jumbotron text-center'>\r\n          <h2>Loading...</h2>\r\n          </div>\r\n          ) : (\r\n            ''\r\n            )}\r\n            \r\n            \r\n            {this.newPostForm(title, caption, viewsLimit, timeLimit)}\r\n            </div>\r\n            );\r\n          }\r\n        }\r\n        \r\n        export default NewPost;\r\n        ","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\EditPost.js",["136"],"import React, { Component } from 'react';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DefaultAvatar from '../images/post.jpg';\r\nimport { getPost, editPost } from './apiPost';\r\n\r\nclass EditPost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      content: '',\r\n      post: {},\r\n      user: {},\r\n      redirectToProfile: false,\r\n      error: '',\r\n      fileSize: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.postData = new FormData();\r\n    const token = isAuthenticate().token;\r\n    const postId = this.props.match.params.postId;\r\n    getPost(postId, token).then(data => {\r\n      if (data.err) console.log(data.err);\r\n      this.setState({\r\n        title: data.title,\r\n        content: data.content,\r\n        post: data,\r\n        user: isAuthenticate().user\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange = name => e => {\r\n    let value = name === 'photo' ? e.target.files[0] : e.target.value;\r\n    let fileSize = name === 'photo' ? e.target.files[0].size : 0;\r\n    this.postData.set(name, value);\r\n    this.setState({ [name]: value, error: '', fileSize });\r\n  };\r\n\r\n  clickSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.isValid()) {\r\n      this.setState({ loading: true });\r\n      const { post } = this.state;\r\n      const token = isAuthenticate().token;\r\n\r\n      editPost(post._id, token, this.postData).then(res => {\r\n        if (res.err) console.log(res.err);\r\n        else {\r\n          this.setState({ redirectToProfile: true });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  isValid = () => {\r\n    const { title, content, fileSize } = this.state;\r\n    if (fileSize > 300000) {\r\n      this.setState({ error: 'File size should be less than 300kb ' });\r\n      return false;\r\n    } else if (title.length === 0 || content.length === 0) {\r\n      this.setState({ error: 'All field is required' });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  newPostForm = (title, content) => (\r\n    <form>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Profile Photo</label>\r\n        <input\r\n          onChange={this.handleChange('photo')}\r\n          type='file'\r\n          accept='images/*'\r\n          className='form-control'\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Title</label>\r\n        <input\r\n          onChange={this.handleChange('title')}\r\n          value={title}\r\n          type='text'\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>content</label>\r\n        <input\r\n          onChange={this.handleChange('content')}\r\n          value={content}\r\n          type='text'\r\n          className='form-control'\r\n        />\r\n      </div>\r\n      <button onClick={this.clickSubmit} className='btn btn-raised btn-primary'>\r\n        Update Post\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  render() {\r\n    const { title, content, post, redirectToProfile, user, error } = this.state;\r\n    if (redirectToProfile) return <Redirect to={`/post/${post._id}`} />;\r\n    return (\r\n      <div className='container'>\r\n        <h2 className='mt-5 mb-5'>Create Post</h2>\r\n        <div\r\n          className='alert alert-danger'\r\n          style={{ display: error ? '' : 'none' }}\r\n        >\r\n          {error}\r\n        </div>\r\n        {!post.title ? (\r\n          <div className='jumbotron text-center'>\r\n            <h2>Loading...</h2>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <img\r\n              src={`${process.env.REACT_APP_API_URL}/post/photo/${post._id}`}\r\n              onError={i => (i.target.src = `${DefaultAvatar}`)}\r\n              style={{ width: '30%', height: '15vw', objectFit: 'cover' }}\r\n              alt={post.title}\r\n            />\r\n\r\n            {this.newPostForm(title, content)}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPost;\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\ExpiredPost.js",["137","138","139"],"import React, { Component } from 'react';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DefaultAvatar from '../images/post.jpg';\r\nimport { createPost } from './apiPost';\r\nimport Test from '../images/padol_logo.png';\r\n\r\nclass ExpiredPost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: {},\r\n      redirectToProfile: false,\r\n      error: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ user: isAuthenticate().user });\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      redirectToProfile,\r\n      user,\r\n      error\r\n    } = this.state;\r\n    if (redirectToProfile) return <Redirect to={`/user/${user._id}`} />;\r\n    return (\r\n      <div className='container'>\r\n        <h2 className='mt-5 mb-5'>This post is not available anymore</h2>\r\n        <div className='card col-md-3 mr-5 mb-5'>\r\n          <h3> Post </h3>\r\n          <img\r\n            className='card-img-top'\r\n            src={Test}\r\n            style={{ width: '100%', height: '10', objectFit: 'cover' }}\r\n            alt='Card image cap'\r\n          />\r\n          <div className='card-body'>\r\n            <h5 className='card-title'>Unreadable</h5>\r\n\r\n          </div>\r\n        </div>\r\n        <div\r\n          className='alert alert-danger'\r\n          style={{ display: error ? '' : 'none' }}\r\n        >\r\n          {error}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpiredPost;\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\auth\\index.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\Posts.js",["140","141"],"import React, { Component } from 'react'\r\nimport { getAllPost, getPhotoPost } from './apiPost'\r\nimport { isAuthenticate } from '../auth'\r\nimport DefaultAvatar from '../images/avatar.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Posts extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      posts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    getAllPost().then(data => {\r\n      if (data.err) console.log(data.err)\r\n      else this.setState({ posts: data })\r\n    })\r\n  }\r\n\r\n  renderPost (posts) {\r\n    return (\r\n      <div className='row'>\r\n        {posts.map(post => {\r\n          const photoUrl = post\r\n            ?  'data:image/png;base64,' + `${process.env.REACT_APP_API_URL}/post/${post._id}`\r\n            : DefaultAvatar\r\n          const token = isAuthenticate().token\r\n          const test = JSON.stringify(getPhotoPost(post._id, token))\r\n          console.log('Photo du post ' + test)\r\n          console.log('post id ' + post._id)\r\n          const posterId = post.postedBy ? post.postedBy._id : ''\r\n          const posterName = post.postedBy ? post.postedBy.pseudo : 'Unknown'\r\n          const infos = post.content\r\n          const date = post.date.uploadDate\r\n          const expiryDate = post.date.expiryDate\r\n          const views = post.views\r\n          return (\r\n            <div className='card col-md-3 mr-5 mb-5' key={post._id}>\r\n              <div>\r\n                <Link to={`/user/${posterId}`}>{posterName} </Link>\r\n              </div>\r\n              <img\r\n                className='card-img-top'\r\n                src={photoUrl}\r\n                onError={i => (i.target.src = `${DefaultAvatar}`)}\r\n                style={{ width: '100%', height: '15vw', objectFit: 'cover' }}\r\n                alt='Card image cap'\r\n              />\r\n              <div className='card-body'>\r\n                <h5 className='card-title'>{infos.title}</h5>\r\n                <p className='card-text'>{infos.caption.substring(0, 50)}</p>\r\n                <br />\r\n                <p className='font-italic mark'>\r\n                  {new Date(date).toDateString()}\r\n                </p>\r\n                <p className='font-italic mark'>\r\n                  Expiration {new Date(expiryDate).toDateString()}\r\n                </p>\r\n                <p className='font-italic mark'>\r\n                  Vues: {views.viewsNumber}/{views.viewsLimit}\r\n                </p>\r\n                <Link\r\n                  to={`/post/${post._id}`}\r\n                  className='btn btn-primary btn-raised btn-sm'\r\n                >\r\n                  Read more\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    const { posts } = this.state\r\n    return (\r\n      <div className='container'>\r\n        {!posts.length || posts.length === 'undefined' ? (\r\n          <div className='jumbotron text-center'>\r\n            <h2>Welcome to Social Network</h2>\r\n          </div>\r\n        ) : (\r\n          <h2 className='mt-5 mb-5'>Recent Posts</h2>\r\n        )}\r\n\r\n        {this.renderPost(posts)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Posts\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\FollowProfileButton.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\apiUser.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\ProfileTabs.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\user\\DeleteProfile.js",[],"C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\apiPost.js",["142","143"],"export const createPost = (userId, token, post) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/${userId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      //'Content-Type': 'application/json',\r\n    },\r\n    mode: 'cors',\r\n    body: post\r\n  })\r\n    .then(res => res.json())\r\n    // .catch(err => console.log(err));\r\n}\r\n\r\n\r\nexport const editPost = (postId, token, post) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/photo/${postId}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(postId),\r\n    headers: {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    mode: 'cors',\r\n    body: post\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const getAllPost = () => {\r\n  const test = { test: 'jojo', opt: 'jaja' }\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/all`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    mode: 'cors',\r\n  })\r\n    .then(res => res.json())\r\n    // .catch(err => console.log(err));\r\n}\r\n\r\nexport const getPost = (postId, token) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\r\n    method: 'GET',\r\n    'Content-Type': 'application/json',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const getBase64Photo = (postId, token) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/photo/${postId}`, {\r\n    method: 'GET',\r\n    'Content-Type': 'application/json',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const getPhotoPost = (postId, token) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/photo/${postId}`, {\r\n    method: 'GET',\r\n    'Content-Type': 'application/json',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getPostByUser = (userId, token) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/by/${userId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const removePost = (postId, token, userId) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/delete`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({postId})\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const likePost = (postId, token, userId, status, numberOfLikes, LikersId) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/like/${postId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ userId, postId, status, numberOfLikes, LikersId })\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const newComment = (postId, token, userId, pseudo, comment) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/comment`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ userId, postId, pseudo, comment })\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const deleteComment = (postId, token, userId, comment) => {\r\n  return fetch(`${process.env.REACT_APP_API_URL}/post/deletecomment`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ userId, postId, comment })\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\Comment.js",["144"],"import React, { Component } from 'react';\r\nimport { isAuthenticate } from '../auth';\r\nimport { newComment } from './apiPost';\r\nimport DefaultAvatar from '../images/avatar.png';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteComment from './DeleteComment';\r\n\r\nclass Comment extends Component {\r\n  state = {\r\n    text: '',\r\n    error: ''\r\n  };\r\n\r\n  handleChange = e => this.setState({ text: e.target.value });\r\n\r\n  isValid = () => {\r\n    const { text } = this.state;\r\n    if (text.length === 0 || text.length > 150) {\r\n      this.setState({\r\n        error: 'Comment should not be empty and less than 150 characters long'\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  addComment = e => {\r\n    e.preventDefault();\r\n    if (this.isValid()) {\r\n      const userId = isAuthenticate().user._id;\r\n      const pseudo = isAuthenticate().user.pseudo;\r\n      const token = isAuthenticate().token;\r\n      const postId = this.props.postId;\r\n      const comment = { text: this.state.text };\r\n\r\n      newComment(postId, token, userId, pseudo, comment).then(data => {\r\n        if (data.err) console.log(data.err);\r\n        this.setState({ text: '' });\r\n        this.props.updateComments(data.comments);\r\n        console.log(data.comments);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, error } = this.state;\r\n    const { comments } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 className='mt-5 mb-5'>Leave a comment</h2>\r\n        <div\r\n          className='alert alert-danger'\r\n          style={{ display: error ? '' : 'none' }}\r\n        >\r\n          {error}\r\n        </div>\r\n\r\n        <form onSubmit={this.addComment}>\r\n          <div className='form-group'>\r\n            <input\r\n              onChange={this.handleChange}\r\n              placeholder='My comment...'\r\n              value={text}\r\n              type='text'\r\n              className='form-control'\r\n            />\r\n          </div>\r\n        </form>\r\n\r\n        <div>\r\n          <h3 className='text-primary'>{comments.length} Comments</h3>\r\n          <hr />\r\n          {comments &&\r\n            comments.map(comment => (\r\n              <div key={comment._id}>\r\n                <div className='row'>\r\n                  <div>\r\n                    <Link to={`/user/${comment.author}`}>\r\n                      <img\r\n                        style={{\r\n                          borderRadius: '50%',\r\n                          border: '2px solid black'\r\n                        }}\r\n                        className='mr-3'\r\n                        src={`${process.env.REACT_APP_API_URL}/user/photo/${comment.author}`}\r\n                        onError={i => (i.target.src = `${DefaultAvatar}`)}\r\n                        alt={comment.author}\r\n                        height='40px'\r\n                        weight='40px'\r\n                      />\r\n\r\n                      <h3 className='lead' style={{ display: 'inline' }}>\r\n                      <Link to={`/user/${comment.author}`}>\r\n                        {comment.pseudo}\r\n                      </Link>:\r\n                      </h3>\r\n                    </Link>\r\n                    <h3> {comment.comment} </h3>\r\n                    <br />\r\n                    <span\r\n                      className='font-italic mark'\r\n                      style={{ paddingRight: '120%' }}\r\n                    >\r\n\r\n                      {(new Date(comment.date)).getHours()}:{(new Date(comment.date)).getMinutes()} on {new Date(comment.date).toDateString()}\r\n                      {isAuthenticate().user &&\r\n                      isAuthenticate().user._id == comment.author ? (\r\n                        <DeleteComment\r\n                          userId={comment.author}\r\n                          postId={this.props.postId}\r\n                          commentId={comment._id}\r\n                          updateComments={this.props.updateComments}\r\n                        />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\DeletePost.js",["145"],"import React, { Component } from 'react';\r\nimport { isAuthenticate, signout } from '../auth';\r\nimport { removePost } from './apiPost';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass DeletePost extends Component {\r\n  state = {\r\n    redirect: false,\r\n    postId:{}\r\n  };\r\n\r\n  deletePost = () => {\r\n    const token = isAuthenticate().token;\r\n    const postId = this.props.postId;\r\n    const userId = this.props.userId;\r\n    this.setState({ redirect: true });\r\n    removePost(postId, token, userId)\r\n  };\r\n\r\n  deleteComfirmed = () => {\r\n    let answer = window.confirm('Are you sure you want to delete your post?');\r\n    if (answer) this.deletePost();\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n    if (redirect) return  <Redirect to={`/`}></Redirect>;\r\n    return (\r\n      <div onClick={this.deleteComfirmed} className='btn btn-raised btn-danger'>\r\n        Delete Post\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeletePost;\r\n","C:\\Users\\axelj\\Documents\\Cours\\3_eme_annee\\Projet_S9\\main\\PADOL\\client\\src\\post\\DeleteComment.js",["146","147"],"import React, { Component } from 'react';\r\nimport { isAuthenticate, signout } from '../auth';\r\nimport { deleteComment } from './apiPost';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass DeleteComment extends Component {\r\n  removeComment = () => {\r\n    const token = isAuthenticate().token;\r\n    const postId = this.props.postId;\r\n    const userId = this.props.userId;\r\n    const comment = { _id: this.props.commentId };\r\n    deleteComment(postId, token, userId, comment).then(data => {\r\n      if (data.err) console.log(data.err);\r\n      else {\r\n        this.props.updateComments(data.comments);\r\n      }\r\n    });\r\n  };\r\n\r\n  deleteComfirmed = () => {\r\n    let answer = window.confirm(\r\n      'Are you sure you want to delete your comment?'\r\n    );\r\n    if (answer) this.removeComment();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        onClick={this.deleteComfirmed}\r\n        className='btn-danger btn'\r\n        style={{ float: 'right', marginTop: '-3%' }}\r\n      >\r\n        Remove\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteComment;\r\n",["148","149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":80,"column":13,"nodeType":"156","endLine":87,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":45,"column":19,"nodeType":"159","messageId":"160","endLine":45,"endColumn":23},{"ruleId":"157","severity":1,"message":"161","line":45,"column":25,"nodeType":"159","messageId":"160","endLine":45,"endColumn":30},{"ruleId":"157","severity":1,"message":"162","line":45,"column":32,"nodeType":"159","messageId":"160","endLine":45,"endColumn":40},{"ruleId":"163","severity":1,"message":"164","line":63,"column":27,"nodeType":"165","messageId":"166","endLine":63,"endColumn":28,"suggestions":"167"},{"ruleId":"163","severity":1,"message":"164","line":63,"column":52,"nodeType":"165","messageId":"166","endLine":63,"endColumn":53,"suggestions":"168"},{"ruleId":"157","severity":1,"message":"169","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"170","line":1,"column":28,"nodeType":"159","messageId":"160","endLine":1,"endColumn":47},{"ruleId":"171","severity":1,"message":"172","line":82,"column":25,"nodeType":"173","messageId":"174","endLine":82,"endColumn":27},{"ruleId":"157","severity":1,"message":"175","line":112,"column":7,"nodeType":"159","messageId":"160","endLine":112,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":137,"column":13,"nodeType":"156","endLine":142,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":169,"column":65,"nodeType":"173","messageId":"174","endLine":169,"endColumn":67},{"ruleId":"178","severity":1,"message":"179","line":188,"column":11,"nodeType":"180","endLine":188,"endColumn":30},{"ruleId":"157","severity":1,"message":"181","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":21},{"ruleId":"157","severity":1,"message":"182","line":108,"column":54,"nodeType":"159","messageId":"160","endLine":108,"endColumn":58},{"ruleId":"157","severity":1,"message":"181","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":21},{"ruleId":"157","severity":1,"message":"183","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":37,"column":11,"nodeType":"156","endLine":42,"endColumn":13},{"ruleId":"186","severity":1,"message":"187","line":27,"column":41,"nodeType":"173","messageId":"188","endLine":27,"endColumn":42},{"ruleId":"184","severity":1,"message":"185","line":44,"column":15,"nodeType":"156","endLine":50,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":25,"column":5,"nodeType":"191","messageId":"174","endLine":25,"endColumn":9},{"ruleId":"157","severity":1,"message":"192","line":32,"column":9,"nodeType":"159","messageId":"160","endLine":32,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":107,"column":49,"nodeType":"173","messageId":"174","endLine":107,"endColumn":51},{"ruleId":"157","severity":1,"message":"193","line":2,"column":26,"nodeType":"159","messageId":"160","endLine":2,"endColumn":33},{"ruleId":"157","severity":1,"message":"193","line":2,"column":26,"nodeType":"159","messageId":"160","endLine":2,"endColumn":33},{"ruleId":"157","severity":1,"message":"194","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":18},{"ruleId":"150","replacedBy":"195"},{"ruleId":"152","replacedBy":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","'password' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["199","200"],["201","202"],"'Component' is defined but never used.","'useImperativeHandle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'DefaultAvatar' is defined but never used.","'user' is assigned a value but never used.","'createPost' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-dupe-keys","Duplicate key 'body'.","ObjectExpression","'test' is assigned a value but never used.","'signout' is defined but never used.","'Redirect' is defined but never used.",["197"],["198"],"no-global-assign","no-unsafe-negation",{"messageId":"203","fix":"204","desc":"205"},{"messageId":"206","fix":"207","desc":"208"},{"messageId":"203","fix":"209","desc":"205"},{"messageId":"206","fix":"210","desc":"208"},"removeEscape",{"range":"211","text":"212"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"213","text":"214"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"215","text":"212"},{"range":"216","text":"214"},[1862,1863],"",[1862,1862],"\\",[1887,1888],[1887,1887]]