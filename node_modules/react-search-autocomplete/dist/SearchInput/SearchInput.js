"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = SearchInput;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _StyledSearchInput = require("./StyledSearchInput");

var _SearchIcon = require("./../icons/SearchIcon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function SearchInput(props) {
  var searchString = props.searchString,
      setSearchString = props.setSearchString,
      autoFocus = props.autoFocus,
      onBlur = props.onBlur,
      onFocus = props.onFocus,
      placeholder = props.placeholder,
      showIcon = props.showIcon;
  return /*#__PURE__*/_react["default"].createElement(_StyledSearchInput.StyledSearchInput, null, showIcon && /*#__PURE__*/_react["default"].createElement(_SearchIcon.SearchIcon, null), /*#__PURE__*/_react["default"].createElement("input", {
    spellCheck: false,
    value: searchString,
    onChange: setSearchString,
    onBlur: onBlur,
    onFocus: onFocus,
    placeholder: placeholder,
    autoFocus: autoFocus
  }));
}

SearchInput.defaultProps = {
  showIcon: true
};
SearchInput.propTypes = {
  searchString: _propTypes["default"].string.isRequired,
  setSearchString: _propTypes["default"].func.isRequired,
  autoFocus: _propTypes["default"].bool,
  onBlur: _propTypes["default"].func.isRequired,
  onFocus: _propTypes["default"].func,
  placeholder: _propTypes["default"].string,
  showIcon: _propTypes["default"].bool
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZWFyY2hJbnB1dC9TZWFyY2hJbnB1dC5qcyJdLCJuYW1lcyI6WyJTZWFyY2hJbnB1dCIsInByb3BzIiwic2VhcmNoU3RyaW5nIiwic2V0U2VhcmNoU3RyaW5nIiwiYXV0b0ZvY3VzIiwib25CbHVyIiwib25Gb2N1cyIsInBsYWNlaG9sZGVyIiwic2hvd0ljb24iLCJkZWZhdWx0UHJvcHMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiZnVuYyIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVlLFNBQVNBLFdBQVQsQ0FBcUJDLEtBQXJCLEVBQTRCO0FBQUEsTUFDakNDLFlBRGlDLEdBQ29ERCxLQURwRCxDQUNqQ0MsWUFEaUM7QUFBQSxNQUNuQkMsZUFEbUIsR0FDb0RGLEtBRHBELENBQ25CRSxlQURtQjtBQUFBLE1BQ0ZDLFNBREUsR0FDb0RILEtBRHBELENBQ0ZHLFNBREU7QUFBQSxNQUNTQyxNQURULEdBQ29ESixLQURwRCxDQUNTSSxNQURUO0FBQUEsTUFDaUJDLE9BRGpCLEdBQ29ETCxLQURwRCxDQUNpQkssT0FEakI7QUFBQSxNQUMwQkMsV0FEMUIsR0FDb0ROLEtBRHBELENBQzBCTSxXQUQxQjtBQUFBLE1BQ3VDQyxRQUR2QyxHQUNvRFAsS0FEcEQsQ0FDdUNPLFFBRHZDO0FBR3pDLHNCQUNFLGdDQUFDLG9DQUFELFFBQ0dBLFFBQVEsaUJBQUksZ0NBQUMsc0JBQUQsT0FEZixlQUVFO0FBQ0UsSUFBQSxVQUFVLEVBQUUsS0FEZDtBQUVFLElBQUEsS0FBSyxFQUFFTixZQUZUO0FBR0UsSUFBQSxRQUFRLEVBQUVDLGVBSFo7QUFJRSxJQUFBLE1BQU0sRUFBRUUsTUFKVjtBQUtFLElBQUEsT0FBTyxFQUFFQyxPQUxYO0FBTUUsSUFBQSxXQUFXLEVBQUVDLFdBTmY7QUFPRSxJQUFBLFNBQVMsRUFBRUg7QUFQYixJQUZGLENBREY7QUFjRDs7QUFFREosV0FBVyxDQUFDUyxZQUFaLEdBQTJCO0FBQ3pCRCxFQUFBQSxRQUFRLEVBQUU7QUFEZSxDQUEzQjtBQUlBUixXQUFXLENBQUNVLFNBQVosR0FBd0I7QUFDdEJSLEVBQUFBLFlBQVksRUFBRVMsc0JBQVVDLE1BQVYsQ0FBaUJDLFVBRFQ7QUFFdEJWLEVBQUFBLGVBQWUsRUFBRVEsc0JBQVVHLElBQVYsQ0FBZUQsVUFGVjtBQUd0QlQsRUFBQUEsU0FBUyxFQUFFTyxzQkFBVUksSUFIQztBQUl0QlYsRUFBQUEsTUFBTSxFQUFFTSxzQkFBVUcsSUFBVixDQUFlRCxVQUpEO0FBS3RCUCxFQUFBQSxPQUFPLEVBQUVLLHNCQUFVRyxJQUxHO0FBTXRCUCxFQUFBQSxXQUFXLEVBQUVJLHNCQUFVQyxNQU5EO0FBT3RCSixFQUFBQSxRQUFRLEVBQUVHLHNCQUFVSTtBQVBFLENBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgU3R5bGVkU2VhcmNoSW5wdXQgfSBmcm9tICcuL1N0eWxlZFNlYXJjaElucHV0J1xuaW1wb3J0IHsgU2VhcmNoSWNvbiB9IGZyb20gJy4vLi4vaWNvbnMvU2VhcmNoSWNvbidcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2VhcmNoSW5wdXQocHJvcHMpIHtcbiAgY29uc3QgeyBzZWFyY2hTdHJpbmcsIHNldFNlYXJjaFN0cmluZywgYXV0b0ZvY3VzLCBvbkJsdXIsIG9uRm9jdXMsIHBsYWNlaG9sZGVyLCBzaG93SWNvbiB9ID0gcHJvcHNcblxuICByZXR1cm4gKFxuICAgIDxTdHlsZWRTZWFyY2hJbnB1dD5cbiAgICAgIHtzaG93SWNvbiAmJiA8U2VhcmNoSWNvbiAvPn1cbiAgICAgIDxpbnB1dFxuICAgICAgICBzcGVsbENoZWNrPXtmYWxzZX1cbiAgICAgICAgdmFsdWU9e3NlYXJjaFN0cmluZ31cbiAgICAgICAgb25DaGFuZ2U9e3NldFNlYXJjaFN0cmluZ31cbiAgICAgICAgb25CbHVyPXtvbkJsdXJ9XG4gICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XG4gICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgYXV0b0ZvY3VzPXthdXRvRm9jdXN9XG4gICAgICAvPlxuICAgIDwvU3R5bGVkU2VhcmNoSW5wdXQ+XG4gIClcbn1cblxuU2VhcmNoSW5wdXQuZGVmYXVsdFByb3BzID0ge1xuICBzaG93SWNvbjogdHJ1ZVxufVxuXG5TZWFyY2hJbnB1dC5wcm9wVHlwZXMgPSB7XG4gIHNlYXJjaFN0cmluZzogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBzZXRTZWFyY2hTdHJpbmc6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGF1dG9Gb2N1czogUHJvcFR5cGVzLmJvb2wsXG4gIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25Gb2N1czogUHJvcFR5cGVzLmZ1bmMsXG4gIHBsYWNlaG9sZGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaG93SWNvbjogUHJvcFR5cGVzLmJvb2xcbn1cbiJdfQ==